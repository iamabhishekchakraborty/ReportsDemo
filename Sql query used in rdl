-- alter the existing view - reason being we need the data in some specific format
ALTER VIEW [dbo].[vDMPrep]
AS
    SELECT  pc.[EnglishProductCategoryName] ,
            COALESCE(p.[ModelName], p.[EnglishProductName]) AS [Model] ,
            c.[CustomerKey] ,
            s.[SalesTerritoryGroup] AS [Region] ,
            CASE WHEN MONTH(GETDATE()) < MONTH(c.[BirthDate])
                 THEN DATEDIFF(yy, c.[BirthDate], GETDATE()) - 1
                 WHEN MONTH(GETDATE()) = MONTH(c.[BirthDate])
                      AND DAY(GETDATE()) < DAY(c.[BirthDate])
                 THEN DATEDIFF(yy, c.[BirthDate], GETDATE()) - 1
                 ELSE DATEDIFF(yy, c.[BirthDate], GETDATE())
            END AS [Age] ,
            CASE WHEN c.[YearlyIncome] < 40000 THEN 'Low'
                 WHEN c.[YearlyIncome] > 60000 THEN 'High'
                 ELSE 'Moderate'
            END AS [IncomeGroup] ,
            d.[CalendarYear] ,
            d.[FiscalYear] ,
            d.[MonthNumberOfYear] AS [Month] ,
            f.[SalesOrderNumber] AS [OrderNumber] ,
            f.SalesOrderLineNumber AS LineNumber ,
            f.OrderQuantity AS Quantity ,
            f.ExtendedAmount AS Amount ,
            s.SalesTerritoryCountry ,
            s.SalesTerritoryGroup
    FROM    [dbo].[FactInternetSales] f
            INNER JOIN [dbo].[DimDate] d ON f.[OrderDateKey] = d.[DateKey]
            INNER JOIN [dbo].[DimProduct] p ON f.[ProductKey] = p.[ProductKey]
            INNER JOIN [dbo].[DimProductSubcategory] psc ON p.[ProductSubcategoryKey] = psc.[ProductSubcategoryKey]
            INNER JOIN [dbo].[DimProductCategory] pc ON psc.[ProductCategoryKey] = pc.[ProductCategoryKey]
            INNER JOIN [dbo].[DimCustomer] c ON f.[CustomerKey] = c.[CustomerKey]
            INNER JOIN [dbo].[DimGeography] g ON c.[GeographyKey] = g.[GeographyKey]
            INNER JOIN [dbo].[DimSalesTerritory] s ON g.[SalesTerritoryKey] = s.[SalesTerritoryKey];
GO;
-- the single query used indisde our rdl - the dataset is referring to this query
SELECT  CASE [Model]
              WHEN 'Mountain-100' THEN 'M200'
              WHEN 'Road-150' THEN 'R250'
              WHEN 'Road-650' THEN 'R750'
              WHEN 'Touring-1000' THEN 'T1000'
              ELSE LEFT([Model], 1) + RIGHT([Model], 3)
            END + ' ' + [Region] AS [ServerRegion] ,
            ( CONVERT(INTEGER, [CalendarYear]) * 100 )
            + CONVERT(INTEGER, [Month]) AS [TimeIndex] ,
            SUM([Quantity]) AS [Quantity] ,
            SUM([Amount]) AS [Amount] ,
            CalendarYear ,
            [Month] ,
            [dbo].[udfBuildISO8601Date]([CalendarYear], [Month], 25) AS ReportingDate ,
            Region ,
            IncomeGroup AS Priority ,
            SalesTerritoryCountry AS ServerTerritoryCountry ,
            SalesTerritoryGroup AS ServerTerritoryGroup
    FROM    [dbo].[vDMPrep]
    WHERE   [Model] IN ( 'Mountain-100', 'Mountain-200', 'Road-150','Road-250') 
	AND     [SalesTerritoryGroup] IN ('North America','Pacific')
    GROUP BY CASE [Model]
               WHEN 'Mountain-100' THEN 'M200'
               WHEN 'Road-150' THEN 'R250'
               WHEN 'Road-650' THEN 'R750'
               WHEN 'Touring-1000' THEN 'T1000'
               ELSE LEFT(Model, 1) + RIGHT(Model, 3)
             END + ' ' + [Region] ,
            ( CONVERT(INTEGER, [CalendarYear]) * 100 )
            + CONVERT(INTEGER, [Month]) ,
            CalendarYear ,
            [Month] ,
            [dbo].[udfBuildISO8601Date]([CalendarYear], [Month], 25) ,
            Region ,
            IncomeGroup ,
            SalesTerritoryCountry ,
            SalesTerritoryGroup;
